//Цикли
//#region Цикл while - використовується для повторення блоку коду, поки умова є істинною.
// Цикл while — це цикл з передумовою, тобто він виконується доки істинна певна умова, зазначена перед його початком. Цю умову перевіряють до виконання тіла циклу, тому тіло може бути не виконано жодного разу, якщо умова від самого початку хибна.
{
  let count = 0;

  while (count < 10) {
    console.log(`Count: ${count}`); // Count: 0, Count: 1, ..., Count: 9
    count += 1;
  }
}

//Задача: Реєстрація у готелі
// Змінна clientCounter зберігає кількість зайнятих номерів на поточний момент.
// Змінна maxClients зберігає загальну кількість номерів у готелі.
// Завдяки циклу while місця в готелі будуть заповнюватися доти, доки поточна кількість клієнтів не дорівнюватиме максимально допустимій.
{
  let clientCounter = 18;
  const maxClients = 25;

  while (clientCounter < maxClients) {
    console.log(clientCounter); // 18, 19, 20, 21, 22, 23, 24
    clientCounter += 1; // Збільшуємо лічильник клієнтів на одиницю на кожній ітерації
  }
}

//Якби нам потрібно було написати функцію:
{
  function countClients(clientCounter, maxClients) {
    let counter = clientCounter; // створюємо локальну змінну

    while (counter < maxClients) {
      console.log(counter); // 18, 19, 20, 21, 22, 23, 24
      counter += 1; // Збільшуємо лічильник клієнтів на одиницю на кожній ітерації
    }
  }
  countClients(18, 25);
}

//Функція calculateTotal(number) приймає ціле число (параметр number). Доповни код функції так, щоб вона повертала суму всіх цілих чисел від одиниці до цього числа включно. Наприклад, якщо number дорівнює 3, то сума - це 1 + 2 + 3, тобто 6.
{
  function calculateTotal(number) {
    let total = 0;
    let i = 1;

    while (i <= number) {
      total += i;
      i++;
    }
    return total;
  }

  console.log(calculateTotal(3)); // 6
  console.log(calculateTotal(7)); // 28
  console.log(calculateTotal(18)); // 171
  console.log(calculateTotal(24)); // 300
  console.log(calculateTotal(35)); // 630
}
//#endregion

//#region Цикл do…while - використовується для повторення блоку коду, поки умова є істинною.
//Цикли while і do...while працюють схожим чином, але мають одну ключову відмінність. Під час використання циклу do...while код у тілі циклу виконується принаймні один раз, навіть якщо умова не виконується з самого початку.

{
  let count = 0;

  do {
    console.log(`Count: ${count}`); // Count: 0, Count: 1, ..., Count: 9
    count += 1;
  } while (count < 5); // умова перевіряється після виконання тіла циклу
}

//#endregion

//#region Цикл for - використовується для повторення блоку коду, поки умова є істинною.

//Ініціалізація — виконується один раз перед початком циклу. Тут оголошується змінна-лічильник і вказується її початкове значення.
// Умова — це вираз, який оцінюється перед кожною ітерацією (повторенням) циклу. Якщо умова перетворюється на**true**, то виконується тіло циклу. Якщо умова перетворюється на false, то цикл завершується.
//Пост-вираз — це вираз, який виконується в кінці кожної ітерації циклу, перед перевіркою умови. Використовується для оновлення значення змінної-лічильника.
//Тіло циклу — це блок коду, який буде виконуватися на кожній ітерації циклу, якщо умова перетворюється на true.

//Розглянемо приклад:
{
  for (let i = 0; i <= 32; i += 5) {
    console.log(i); // 0, 5, 10, 15, 20, 25, 30
  }
}
{
  for (let i = 20; i >= 0; i -= 5) {
    console.log(i); // 20, 15, 10, 5, 0
  }
}

//Напишемо фукнцію яка підсумовує всі числа від 0 до заданого числа і повертає результат:
{
  function sumUpTo(number) {
    let sum = 0;

    for (let i = 0; i <= number; i += 1) {
      sum += i; // на кожній ітерації додаємо поточне значення лічильника до змінної sum
    }

    return sum; // повертаємо значення змінної sum
  }

  console.log(sumUpTo(5)); // 15
  console.log(sumUpTo(10)); // 55
  console.log(sumUpTo(0)); // 0
}

//#endregion
