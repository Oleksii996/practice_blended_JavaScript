//#region Ітерація по масиву
// Ітерація по масиву з використанням циклу for дозволяє перебрати елементи масиву і виконати певну дію для кожного елемента.

// У прикладі нижче масив planets містить назви планет, і цикл for використовується для виведення кожного елемента в консоль.

{
  const planets = ["Earth", "Mars", "Venus"];

  for (let i = 0; i < planets.length; i += 1) {
    console.log(planets[i]);
  }
}
//Початкове значення лічильника i встановлюється як 0 і цикл продовжується, поки i менше за довжину масиву planets.length
//На кожній ітерації циклу використовується planets[i] для доступу до елементів масиву за їх індексом i
//Значення лічильника i з кожною ітерацією збільшується на 1 (вираз i += 1)
//Умова i < planets.length буде повертати true для значень лічильника 0, 1 і 2. Коли i досягне значення 3, умова стане false і цикл зупиниться

//Таким чином, на кожній ітерації циклу буде виконуватися блок коду всередині фігурних дужок, де ми виводимо поточний елемент масиву planets[i] в консоль. Результатом роботи циклу буде виведення назв планет одна за одною.

//Приклад-задача
// Функція calculateTotalPrice(order) приймає один параметр order - масив чисел. Доповни функцію так, щоб вона повертала загальну суму елементів з масиву order.

{
  function calculateTotalPrice(order) {
    for (let i = 0; i < order.length; i += 1) {}
  }

  console.log(calculateTotalPrice([12, 85, 37, 4]));
  console.log(calculateTotalPrice([164, 48, 291]));
  console.log(calculateTotalPrice([412, 371, 94, 63, 176]));
}

//#endregion
